{"version":3,"sources":["services.js","widgets/messages/text-message.js","widgets/messages/file-message.js","redux/selectors.js","redux/actions.js","redux/actionTypes.js","components/send-form.js","components/message-list.js","components/my-loader.js","redux/reducers.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["services","roomId","URL","window","location","href","searchParams","get","senderId","parseInt","lastMsgId","url","first","console","log","this","user","Promise","ok","fail","axios","then","res","data","messages","length","id","users","filter","e","error","catch","err","msg","u","uuid","sender","clientId","post","formData","FormData","fileData","document","querySelector","files","append","headers","fileId","moment","locale","TextMessage","text","props","_name","nickName","date","Date","createdAt","format","isSame","className","React","Component","connect","FileMessage","downloadFile","getFile","JSON","parse","state","color","type","getHref","download","name","onMouseOver","setState","onMouseLeave","onClick","icon","faFileDownload","style","getComponentsState","store","getMessagesList","addMessage","payload","SendForm","handleChange","message","target","value","handleSubmit","str","trim","which","preventDefault","submitMsg","sendMessage","setTimeout","scroll","submitFile","sendFile","placeholder","onChange","onKeyDown","faPaperPlane","fileUpload","click","faPaperclip","hidden","ref","MessageList","handleScroll","textInput","scrollIntoView","scrollTo","scrollHeight","checkMessages","forEach","interval","setInterval","clearInterval","map","key","MyLoader","loaded","init","onLoad","height","width","initialMessageState","conversations","createStore","action","m","push","App","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.287728f2.chunk.js","sourcesContent":["import axios from 'axios';\nimport * as uuid from \"uuid/v4\";\n\nclass Services {\n\n    roomId = new URL(window.location.href).searchParams.get('room'); //98d6978b-0c34-4815-a446-c586d7336323\n    senderId = parseInt(new URL(window.location.href).searchParams.get('id'));\n    lastMsgId = -1;\n    //url = 'http://localhost:3000';\n    url = '';\n\n    messages(first) {\n        console.log(this.roomId + ' ' + this.senderId)\n        var user = this.senderId;\n        return new Promise((ok, fail) => {\n            axios\n                .get(this.url + '/chat/api/rooms/' + this.roomId + '/' + this.senderId)\n                .then(res => {\n                    if (first && res.data.data.messages.length > 0) {\n                        this.lastMsgId = res.data.data.messages[res.data.data.messages.length - 1].id;\n                    }\n                    if (res.data.data.users.filter(function (e) { return e.id === user; }).length === 0) {\n                        throw this.error;\n                    }\n                    return ok(res.data);\n                }).catch(err => fail(err));\n        });\n    }\n\n    sendMessage(msg) {\n        var u = uuid();\n        msg.sender.id = this.senderId;\n        msg.clientId = u;\n        return new Promise((ok, fail) => {\n            axios\n                .post(this.url + '/chat/api/rooms/' + this.roomId + '/messages/', msg)\n                .then(res => {\n                    if (res.data.data.id > this.lastMsgId) {\n                        this.lastMsgId = res.data.data.id;\n                    }\n                    return ok(res.data.data);\n                })\n                .catch(err => fail(err));\n        });\n    }\n\n    checkMessages() {\n        return new Promise((ok, fail) => {\n            axios\n                .get(this.url + '/chat/api/rooms/' + this.roomId + '/messages/' + this.lastMsgId + '/' + this.senderId)\n                .then(res => {\n                    if (res.data.data.messages.length > 0) {\n                        this.lastMsgId = res.data.data.messages[res.data.data.messages.length - 1].id;\n                    }\n                    return ok(res.data);\n                }).catch(err => fail(err));\n        });\n    }\n\n    sendFile() {\n        let formData = new FormData();\n        let fileData = document.querySelector('input[type=\"file\"]').files[0];\n        formData.append('file', fileData);\n        formData.append('senderId', this.senderId);\n        formData.append('clientId', uuid());\n        formData.append('type', 'file');\n\n        return new Promise((ok, fail) => {\n            axios\n                .post(this.url + '/chat/api/rooms/' + this.roomId + '/files/', formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                })\n                .then(res => {\n                    return ok(res.data.data);\n                })\n                .catch(err => fail(err));\n        });\n    }\n\n    getFile(fileId) {\n        return new Promise((ok, fail) => {\n            axios\n                .get(this.url + '/chat/api/rooms/file/' + fileId)\n                .then(res => {\n                    return ok(res.data.data);\n                })\n                .catch(err => fail(err));\n        })\n    }\n\n    getHref(id) {\n        return this.url + '/chat/api/rooms/file/' + id;\n    }\n}\n\nexport const services = new Services();","import React from 'react'\nimport { connect } from 'react-redux'\nimport { services } from '../../services'\nimport moment from 'moment'\nimport 'moment/locale/it'\nmoment.locale('it')\n\nclass TextMessage extends React.Component {  \n    \n    render() {\n        var msg = 'left align-self-start';\n        var text = 'left-text';\n        var sender = this.props.msg.sender._name || this.props.msg.sender.user.nickName;\n        if (this.props.msg.sender.id === services.senderId) {\n            msg = 'right align-self-end';\n            text = 'right-text';\n            sender = '';\n        }\n\n        var date = moment(new Date(this.props.msg.createdAt)).format('D MMM HH:mm');\n        if (moment(new Date()).isSame(this.props.msg.createdAt, 'day')) {\n            date = moment(new Date(this.props.msg.createdAt)).format('HH:mm');\n        }\n        \n        return (\n            <div className={ msg + ' message wordwrap' }>\n                <div className={ text + ' message-text d-flex flex-column' }>\n                    <div className=\"name-text align-self-start\">{ sender }</div>\n                    <div>{ this.props.msg.text }</div>\n                    <div className=\"date-text align-self-end\">\n                        { date }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(null)(TextMessage);","import React from 'react'\nimport { connect } from 'react-redux'\nimport { services } from '../../services'\nimport moment from 'moment'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons'\nimport 'moment/locale/it'\nmoment.locale('it')\n\nclass FileMessage extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            color: \"white\" \n        };\n    }\n    \n    downloadFile = () => {\n        services.getFile(JSON.parse(this.props.msg.text).id).then((res) => console.log(res));\n    }\n    \n    render() {\n        var msg = 'left align-self-start';\n        var text = 'left-text';\n        var sender = this.props.msg.sender._name || this.props.msg.sender.user.nickName;\n        if (this.props.msg.sender.id === services.senderId) {\n            msg = 'right align-self-end';\n            text = 'right-text';\n            sender = '';\n        }\n\n        var date = moment(new Date(this.props.msg.createdAt)).format('D MMM HH:mm');\n        if (moment(new Date()).isSame(this.props.msg.createdAt, 'day')) {\n            date = moment(new Date(this.props.msg.createdAt)).format('HH:mm');\n        }\n\n        return (\n            <div className={ msg + ' message wordwrap' }>\n                <div className={ text + ' message-text d-flex flex-column' }>\n                    <div className=\"name-text align-self-start\">{ sender }</div>\n                    <div>\n                        <a type=\"button\" className=\"btn btn-outline-light m-2\" \n                            href={ services.getHref(JSON.parse(this.props.msg.text).id) }\n                            download={ JSON.parse(this.props.msg.text).name }\n                            onMouseOver={ () => this.setState({ color: \"#4e73df\" }) }\n                            onMouseLeave={ () => this.setState({ color: \"white\" }) }\n                            onClick={ this.downloadFile }>\n                            <FontAwesomeIcon icon={ faFileDownload } style={{ color: this.state.color }}/>\n                        </a>\n                        { JSON.parse(this.props.msg.text).name }\n                    </div>\n                    <div className=\"date-text align-self-end\">\n                        { date }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(null)(FileMessage);","export const getComponentsState = store => {\n    return store.messages;\n}\nexport const getMessagesList = store => {\n    return getComponentsState(store) ? getComponentsState(store) : [];\n}","import { ADD_MESSAGE, INIT } from './actionTypes';\n\nexport const addMessage = (msg) => (\n    {\n        type: ADD_MESSAGE,\n        payload: msg\n    }\n)\n\nexport const init = (msg) => (\n    {\n        type: INIT,\n        payload: msg\n    }\n)\n\n","export const ADD_MESSAGE = \"ADD_MESSAGE\"\nexport const INIT = \"INIT\"\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { addMessage } from '../redux/actions'\nimport { services } from '../services'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPaperPlane, faPaperclip } from '@fortawesome/free-solid-svg-icons'\n\nclass SendForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            message: ''\n        };\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            message: e.target.value\n        });\n    }\n\n    handleSubmit = (e) => {\n        var str = e.target.value.trim();\n        if (e.which === 13 && str.length === 0) {\n            e.preventDefault()\n            this.setState({\n                message: ''\n            })\n        }\n\n        if (e.which === 13 && str.length > 0) {\n            this.submitMsg();\n        }\n    }\n\n    submitMsg = () => {\n        if (!this.state.message.trim()) {\n            this.setState({\n                message: ''\n            })\n            return;\n        }\n        var msg = {\n            sender: {},\n            type: 'text',\n            text: this.state.message\n        }\n        services.sendMessage(msg).then(res => {\n            if (res) {\n                this.props.addMessage(res);\n                    \n                this.setState({\n                    message: ''\n                })\n                setTimeout(() => {this.props.scroll();})\n            }\n        })\n    }\n\n    submitFile = () => {\n        var file = {\n            sender: {},\n            type: 'file',\n            text: ''\n        }\n        services.sendFile(file).then(res => {\n            if (res) {\n                this.props.addMessage(res);\n                setTimeout(() => {this.props.scroll();})\n            }\n        })\n    }\n\n    render() {\n        return (\n            <form className=\"send-message-form\">\n                <div className=\"d-flex\">\n                        <textarea\n                        placeholder=\"Digita un messaggio e premi INVIO\"\n                        onChange={ this.handleChange }\n                        onKeyDown={ this.handleSubmit }\n                        value={ this.state.message }/>\n                        \n                        <button type=\"button\" onClick={ this.submitMsg } className=\"btn btn-outline-primary m-3\">\n                            <FontAwesomeIcon icon={ faPaperPlane } />\n                        </button>\n                        <button type=\"button\" onClick={ () => { this.fileUpload.click() } } className=\"btn btn-outline-primary mt-3 mb-3 mr-3 file-button\">\n                            <FontAwesomeIcon icon={faPaperclip}/>\n                        </button>\n                        <input hidden type=\"file\" ref={ (e) => { this.fileUpload = e; } } onChange={ this.submitFile }></input>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default connect(null, { addMessage })(SendForm);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport TextMessage from '../widgets/messages/text-message'\nimport FileMessage from '../widgets/messages/file-message'\nimport { getMessagesList } from '../redux/selectors'\nimport SendForm from './send-form'\nimport { services } from '../services'\nimport { addMessage } from '../redux/actions'\n\nclass MessageList extends Component {\n        \n    handleScroll = () => {\n        this.textInput.scrollIntoView(false)\n        this.textInput.scrollTo(0, this.textInput.scrollHeight)                   \n    }\n\n    componentDidMount() {\n        this.handleScroll();\n        this.interval = setInterval(() => this.checkMessages(), 1000);\n    }  \n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    checkMessages = () => {\n        services.checkMessages().then(data => {\n            data.data.messages.forEach((msg) => {\n                this.props.addMessage(msg);\n                this.handleScroll();\n            })\n        });\n        services.messages();\n    }\n\n    render() {\n        return (\n            <div className=\"list-container\">\n                <div ref={ (e) => { this.textInput = e; } } className=\"message-list d-flex flex-column\">\n                    {this.props.messages.map((msg) => {\n                        if (msg.type === 'text')\n                            return <TextMessage key={ msg.id } msg={ msg }/>\n                        else\n                            return <FileMessage key={ msg.id } msg={ msg }/>\n                    })}\n                </div>\n                <SendForm scroll={ () => this.handleScroll() } />\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return { \n        messages: getMessagesList(state)\n    };\n}\n\nexport default connect(mapStateToProps, { addMessage })(MessageList);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport MessageList from './message-list'\nimport { init } from '../redux/actions'\nimport { services } from '../services'\nimport Loader from 'react-loader-spinner'\n\nclass MyLoader extends Component {\n    constructor() {\n        super();\n        this.state = {\n            loaded: false,\n        };\n    }\n\n    init() {\n        services.messages(true).then(data => {\n            if (data.data.messages) {\n                this.props.init(data.data.messages);\n                setTimeout(() => {\n                    this.setState({\n                        loaded: true\n                    })\n                }, 1000);\n            }\n        });\n    }\n\n    render() {\n        return (\n            this.state.loaded\n                ? <MessageList />\n                : <div className='loader d-flex' onLoad={ this.init() }>\n                    <Loader\n                        type=\"Grid\"\n                        color=\"#4e73df\"\n                        height={ 100 }\n                        width={ 100 }\n                    />\n                </div>\n        )\n    }\n}\n\nexport default connect(null, { init })(MyLoader);","import { ADD_MESSAGE, INIT } from './actionTypes'\n\nconst initialMessageState = {\n    messages: [],\n    conversations: []\n}\n\nexport default function (state = initialMessageState, action) {\n    switch (action.type) {\n        case INIT: {\n            return ({\n                ...state,\n                messages: action.payload,\n            });\n        }\n        case ADD_MESSAGE: {\n            let messages = [...state.messages];\n            if (messages.filter(function(m) { return m.id === action.payload.id; }).length === 0) {\n                messages.push(action.payload)\n            }\n            return ({\n                ...state,\n                messages: messages,\n            });\n        }\n        default:\n            return state;\n    }\n}\n","import { createStore } from \"redux\"\nimport reducers from \"./reducers\"\n\nexport default createStore(reducers);","import React from 'react'\nimport './App.css'\nimport MyLoader from './components/my-loader'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <MyLoader />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}